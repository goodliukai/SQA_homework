The understanding of Software Quality Assurance 

Firstly I should talk about quality. So what is quality, Especially software quality? A popular view 
of quality is that it is an intangible trait—it can be discussed, felt, and judged, but cannot be 
weighed or measured. Another popular view is that quality connotes luxury, class, and taste. Some 
experts defines quality as "conformance to Requirements " or "fitness for use".In software, the 
narrowest sense of product quality is : lack of "bugs" in the product.It is also the most basic meaning
of conformance to requirements. This definition is usually expressed in: defect rate, Reliability, 
Customer satisfaction and so on. We can call such attributes quality parameters, or parameters for 
fitness for use. In some way, we always use quality to judge if the software is successful. Quality 
is so important that people must find out some ways to ensure it.

Software quality assurance (SQA) consists of a means of monitoring the software engineering processes
and methods used to ensure quality. The methods by which this is accomplished are many and varied, 
and may include ensuring conformance to one or more standards, such as ISO 9000 or a model such as 
CMMI.(From wiki))

SQA encompasses the entire software development process, which includes processes such as requirements
definition, software design, coding, source code control, code reviews, change management, configuration
management, testing, release management, and product integration. SQA is organized into goals, commitments,
abilities, activities, measurements, and verifications.

As I can see from chapter 3, SQA contains QA as Dealing with Defect, Defect Prevention, Defect Detection
and Removal, Defect Containment.

That's my understanding of SQA.

刘凯

2014-3-6
